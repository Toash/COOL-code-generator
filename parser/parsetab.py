
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT CASE CLASS COLON COMMA DIVIDE DOT ELSE EQUALS ESAC FALSE FI IDENTIFIER IF IN INHERITS INTEGER ISVOID LARROW LBRACE LE LET LOOP LPAREN LT MINUS NEW NOT OF PLUS POOL RARROW RBRACE RPAREN SEMI STRING THEN TILDE TIMES TRUE TYPE WHILEprogram : classlist\n                classlist : class SEMI classlist \n                        | class SEMI\n                \n                class : CLASS type LBRACE featurelist RBRACE\n                type : TYPEidentifier : IDENTIFIERfeaturelist :featurelist : feature SEMI featurelistfeature : identifier COLON type'
    
_lr_action_items = {'CLASS':([0,5,],[4,4,]),'$end':([1,2,5,8,],[0,-1,-3,-2,]),'SEMI':([3,7,11,14,18,],[5,-5,15,-4,-9,]),'TYPE':([4,16,],[7,7,]),'LBRACE':([6,7,],[9,-5,]),'RBRACE':([9,10,15,17,],[-7,14,-7,-8,]),'IDENTIFIER':([9,15,],[13,13,]),'COLON':([12,13,],[16,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'classlist':([0,5,],[2,8,]),'class':([0,5,],[3,3,]),'type':([4,16,],[6,18,]),'featurelist':([9,15,],[10,17,]),'feature':([9,15,],[11,11,]),'identifier':([9,15,],[12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','parser.py',54),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist','parser.py',58),
  ('classlist -> class SEMI','classlist',2,'p_classlist','parser.py',59),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','parser.py',69),
  ('type -> TYPE','type',1,'p_type','parser.py',74),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',78),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','parser.py',83),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','parser.py',86),
  ('feature -> identifier COLON type','feature',3,'p_feature_attribute_no_init','parser.py',90),
]
